[
  {
    "title": "Modular Docs - mojo run",
    "url": "https://docs.modular.com/mojo/cli/run.html",
    "html": "MAX Engine\nMAX Serving\nMojoðŸ”¥\nGet Started\nOverview\nWhy Mojo\nMojo Manual\nIntro\nGet started\nLanguage basics\nFunctions\nVariables\nStructs\nTraits\nValue ownership\nValue lifecycle\nMetaprogramming\nPython\nDecorators\nModules and packages\nMojo notebooks\nOverview\nLow-level IR in Mojo\nMandelbrot in Mojo with Python plots\nMatrix multiplication in Mojo\nFast memset in Mojo\nRay tracing in Mojo\nMojo library\nModule index\nalgorithm\nautotune\nbase64\nbenchmark\nbuiltin\ncomplex\nmath\nmemory\nos\npathlib\npython\nrandom\nsys\ntensor\ntesting\ntime\nutils\nMojo CLI\nmojo\nmojo build\nmojo debug\nmojo demangle\nmojo doc\nmojo format\nmojo package\nmojo repl\nmojo run\nRoadmap & sharp edges\nChangelog\nFAQ\nCommunity\nOn this page\nSynopsis\nDescription\nOptions\nmojo run\n\nBuilds and executes a Mojo file.\n\nSynopsis\nmojo run [options] <path>\nDescription\n\nCompiles the Mojo file at the given path and immediately executes it. Another way to execute this command is to simply pass a file to mojo. For example:\n\nmojo hello.mojo\n\nOptions for this command itself, such as the ones listed below, must appear before the input file path argument. Any command line arguments that appear after the Mojo source file path are interpreted as arguments for that Mojo program.\n\nOptions\nCompilation options\n--no-optimization, -O0\n\nDisables compiler optimizations. This might reduce the amount of time it takes to compile the Mojo source file. It might also reduce the runtime performance of the compiled executable.\n\n--target-triple <TRIPLE>\n\nSets the compilation target triple. Defaults to the host target.\n\n--target-cpu <CPU>\n\nSets the compilation target CPU. Defaults to the host CPU.\n\n--target-features <FEATURES>\n\nSets the compilation target CPU features. Defaults to the host features.\n\n--march <ARCHITECTURE>\n\nSets the architecture for which to generate code.\n\n--mcpu <CPU>\n\nSets the CPU for which to generate code.\n\n--mtune <TUNE>\n\nSets the CPU for which to tune code.\n\n-I <PATH>\n\nAppends the given path to the list of directories to search for imported Mojo files.\n\n-D <KEY=VALUE>\n\nDefines a named value that can be used from within the Mojo source file being executed. For example, -D foo=42 defines a name foo that, when queried with the sys.param_env module from within the Mojo program, would yield the compile-time value 42.\n\n--parsing-stdlib\n\nParses the input file(s) as the Mojo standard library.\n\nDiagnostic options\n--warn-missing-doc-strings\n\nEmits warnings for missing or partial docstrings.\n\n--max-notes-per-diagnostic <INTEGER>\n\nWhen the Mojo compiler emits diagnostics, it sometimes also prints notes with additional information. This option sets an upper threshold on the number of notes that can be printed with a diagnostic. If not specified, the default maximum is 10.\n\nExperimental compilation options\n--debug-level <LEVEL>\n\nSets the level of debug info to use at compilation. The value must be one of: none (the default value), line-tables, or full. Please note that there are issues when generating debug info for some Mojo programs that have yet to be addressed.\n\n--sanitize <CHECK>\n\nTurns on runtime checks. The following values are supported: address (detects memory issues), and thread (detects multi-threading issues). Please note that these checks are not currently supported when executing Mojo programs.\n\n--debug-info-language <LANGUAGE>\n\nSets the language to emit as part of the debug info. The supported languages are: Mojo, and C. C is the default, and is useful to enable rudimentary debugging and binary introspection in tools that donâ€™t understand Mojo.\n\nCommon options\n--help, -h\n\nDisplays help information.\n\nÂ© 2023 Modular Inc\ncookie\nModular.com\nTerms\nPrivacy\nGet started\nPlease accept our cookies\nWe use cookies to monitor visitor traffic and gain valuable insights that help us improve the website and documentation. Read more\nAccept\nReject"
  },
  {
    "title": "Modular Docs - mojo repl",
    "url": "https://docs.modular.com/mojo/cli/repl.html",
    "html": "MAX Engine\nMAX Serving\nMojoðŸ”¥\nGet Started\nOverview\nWhy Mojo\nMojo Manual\nIntro\nGet started\nLanguage basics\nFunctions\nVariables\nStructs\nTraits\nValue ownership\nValue lifecycle\nMetaprogramming\nPython\nDecorators\nModules and packages\nMojo notebooks\nOverview\nLow-level IR in Mojo\nMandelbrot in Mojo with Python plots\nMatrix multiplication in Mojo\nFast memset in Mojo\nRay tracing in Mojo\nMojo library\nModule index\nalgorithm\nautotune\nbase64\nbenchmark\nbuiltin\ncomplex\nmath\nmemory\nos\npathlib\npython\nrandom\nsys\ntensor\ntesting\ntime\nutils\nMojo CLI\nmojo\nmojo build\nmojo debug\nmojo demangle\nmojo doc\nmojo format\nmojo package\nmojo repl\nmojo run\nRoadmap & sharp edges\nChangelog\nFAQ\nCommunity\nOn this page\nSynopsis\nDescription\nOptions\nmojo repl\n\nLaunches the Mojo REPL.\n\nSynopsis\nmojo repl [lldb-options]\nDescription\n\nLaunches a Mojo read-evaluate-print loop (REPL) environment, which provides interactive development in the terminal. You can also start the REPL by simply running mojo.\n\nAny number of options and arguments may be specified on the command line. These are then forwarded to the underlying lldb tool, which runs the REPL.\n\nOptions\nCommon options\n--help, -h\n\nDisplays help information.\n\nÂ© 2023 Modular Inc\ncookie\nModular.com\nTerms\nPrivacy\nGet started\nPlease accept our cookies\nWe use cookies to monitor visitor traffic and gain valuable insights that help us improve the website and documentation. Read more\nAccept\nReject"
  },
  {
    "title": "Modular Docs - mojo package",
    "url": "https://docs.modular.com/mojo/cli/package.html",
    "html": "MAX Engine\nMAX Serving\nMojoðŸ”¥\nGet Started\nOverview\nWhy Mojo\nMojo Manual\nIntro\nGet started\nLanguage basics\nFunctions\nVariables\nStructs\nTraits\nValue ownership\nValue lifecycle\nMetaprogramming\nPython\nDecorators\nModules and packages\nMojo notebooks\nOverview\nLow-level IR in Mojo\nMandelbrot in Mojo with Python plots\nMatrix multiplication in Mojo\nFast memset in Mojo\nRay tracing in Mojo\nMojo library\nModule index\nalgorithm\nautotune\nbase64\nbenchmark\nbuiltin\ncomplex\nmath\nmemory\nos\npathlib\npython\nrandom\nsys\ntensor\ntesting\ntime\nutils\nMojo CLI\nmojo\nmojo build\nmojo debug\nmojo demangle\nmojo doc\nmojo format\nmojo package\nmojo repl\nmojo run\nRoadmap & sharp edges\nChangelog\nFAQ\nCommunity\nOn this page\nSynopsis\nDescription\nOptions\nmojo package\n\nCompiles a Mojo package.\n\nSynopsis\nmojo package [options] <path>\nDescription\n\nCompiles a directory of Mojo source files into a binary package suitable to share and import into other Mojo programs and modules.\n\nTo create a Mojo package, first add an __init__.mojo file to your package directory. Then pass that directory name to this command, and specify the output path and filename with -o.\n\nFor more information, see Mojo modules and packages.\n\nOptions\nOutput options\n-o <PATH>\n\nSets the path and filename for the output package. The filename must end with either .mojopkg or .ðŸ“¦. The filename given here defines the package name you can then use to import the code (minus the file extension). If you donâ€™t specify this option, output is written to stdout.\n\nCompilation options\n--no-optimization, -O0\n\nDisables compiler optimizations. This might reduce the amount of time it takes to compile the Mojo source file. It might also reduce the runtime performance of the compiled executable.\n\n--target-triple <TRIPLE>\n\nSets the compilation target triple. Defaults to the host target.\n\n--target-cpu <CPU>\n\nSets the compilation target CPU. Defaults to the host CPU.\n\n--target-features <FEATURES>\n\nSets the compilation target CPU features. Defaults to the host features.\n\n--march <ARCHITECTURE>\n\nSets the architecture for which to generate code.\n\n--mcpu <CPU>\n\nSets the CPU for which to generate code.\n\n--mtune <TUNE>\n\nSets the CPU for which to tune code.\n\n-I <PATH>\n\nAppends the given path to the list of directories to search for imported Mojo files.\n\n-D <KEY=VALUE>\n\nDefines a named value that can be used from within the Mojo source file being executed. For example, -D foo=42 defines a name foo that, when queried with the sys.param_env module from within the Mojo program, would yield the compile-time value 42.\n\n--parsing-stdlib\n\nParses the input file(s) as the Mojo standard library.\n\nDiagnostic options\n--warn-missing-doc-strings\n\nEmits warnings for missing or partial docstrings.\n\n--max-notes-per-diagnostic <INTEGER>\n\nWhen the Mojo compiler emits diagnostics, it sometimes also prints notes with additional information. This option sets an upper threshold on the number of notes that can be printed with a diagnostic. If not specified, the default maximum is 10.\n\nExperimental compilation options\n--debug-level <LEVEL>\n\nSets the level of debug info to use at compilation. The value must be one of: none (the default value), line-tables, or full. Please note that there are issues when generating debug info for some Mojo programs that have yet to be addressed.\n\n--sanitize <CHECK>\n\nTurns on runtime checks. The following values are supported: address (detects memory issues), and thread (detects multi-threading issues). Please note that these checks are not currently supported when executing Mojo programs.\n\n--debug-info-language <LANGUAGE>\n\nSets the language to emit as part of the debug info. The supported languages are: Mojo, and C. C is the default, and is useful to enable rudimentary debugging and binary introspection in tools that donâ€™t understand Mojo.\n\nCommon options\n--help, -h\n\nDisplays help information.\n\nÂ© 2023 Modular Inc\ncookie\nModular.com\nTerms\nPrivacy\nGet started\nPlease accept our cookies\nWe use cookies to monitor visitor traffic and gain valuable insights that help us improve the website and documentation. Read more\nAccept\nReject"
  },
  {
    "title": "Modular Docs - mojo format",
    "url": "https://docs.modular.com/mojo/cli/format.html",
    "html": "MAX Engine\nMAX Serving\nMojoðŸ”¥\nGet Started\nOverview\nWhy Mojo\nMojo Manual\nIntro\nGet started\nLanguage basics\nFunctions\nVariables\nStructs\nTraits\nValue ownership\nValue lifecycle\nMetaprogramming\nPython\nDecorators\nModules and packages\nMojo notebooks\nOverview\nLow-level IR in Mojo\nMandelbrot in Mojo with Python plots\nMatrix multiplication in Mojo\nFast memset in Mojo\nRay tracing in Mojo\nMojo library\nModule index\nalgorithm\nautotune\nbase64\nbenchmark\nbuiltin\ncomplex\nmath\nmemory\nos\npathlib\npython\nrandom\nsys\ntensor\ntesting\ntime\nutils\nMojo CLI\nmojo\nmojo build\nmojo debug\nmojo demangle\nmojo doc\nmojo format\nmojo package\nmojo repl\nmojo run\nRoadmap & sharp edges\nChangelog\nFAQ\nCommunity\nOn this page\nSynopsis\nDescription\nOptions\nmojo format\n\nFormats Mojo source files.\n\nSynopsis\nmojo format [options] <sources...>\nDescription\n\nFormats the given set of Mojo sources using a Mojo-specific lint tool.\n\nOptions\nFormat options\n--line-length <INTEGER>, -l <INTEGER>\n\nSets the max character line length. Default is 80.\n\nDiagnostic options\n--quiet, -q\n\nDisables non-error messages.\n\nCommon options\n--help, -h\n\nDisplays help information.\n\nÂ© 2023 Modular Inc\ncookie\nModular.com\nTerms\nPrivacy\nGet started\nPlease accept our cookies\nWe use cookies to monitor visitor traffic and gain valuable insights that help us improve the website and documentation. Read more\nAccept\nReject"
  },
  {
    "title": "Modular Docs - mojo doc",
    "url": "https://docs.modular.com/mojo/cli/doc.html",
    "html": "MAX Engine\nMAX Serving\nMojoðŸ”¥\nGet Started\nOverview\nWhy Mojo\nMojo Manual\nIntro\nGet started\nLanguage basics\nFunctions\nVariables\nStructs\nTraits\nValue ownership\nValue lifecycle\nMetaprogramming\nPython\nDecorators\nModules and packages\nMojo notebooks\nOverview\nLow-level IR in Mojo\nMandelbrot in Mojo with Python plots\nMatrix multiplication in Mojo\nFast memset in Mojo\nRay tracing in Mojo\nMojo library\nModule index\nalgorithm\nautotune\nbase64\nbenchmark\nbuiltin\ncomplex\nmath\nmemory\nos\npathlib\npython\nrandom\nsys\ntensor\ntesting\ntime\nutils\nMojo CLI\nmojo\nmojo build\nmojo debug\nmojo demangle\nmojo doc\nmojo format\nmojo package\nmojo repl\nmojo run\nRoadmap & sharp edges\nChangelog\nFAQ\nCommunity\nOn this page\nSynopsis\nDescription\nOptions\nmojo doc\n\nCompiles docstrings from a Mojo file.\n\nSynopsis\nmojo doc [options] <path>\nDescription\n\nThis is an early version of a documentation tool that generates an API reference from Mojo code comments. Currently, it generates a structured output of all docstrings into a JSON file, and it does not generate HTML. This output format is subject to change.\n\nThe input must be the path to a single Mojo source file.\n\nOptions\nOutput options\n-o <PATH>\n\nSets the path and filename for the JSON output. If not provided, output is written to stdout.\n\nCompilation options\n-I <PATH>\n\nAppends the given path to the list of directories that Mojo will search for any package/module dependencies. That is, if the file you pass to mojo doc imports any packages that do not reside in the local path and are not part of the Mojo standard library, use this to specify the path where Mojo can find those packages.\n\n--parsing-stdlib\n\nFor internal use only.\n\nValidation options\n\nThe following validation options help ensure that your docstrings use valid structure and meet other style criteria. By default, warnings are emitted only if the docstrings contain errors that prevent translation to the output format. (More options coming later.)\n\n--warn-missing-doc-strings\n\nEmits warnings for missing or partial docstrings.\n\nCommon options\n--help, -h\n\nDisplays help information.\n\nÂ© 2023 Modular Inc\ncookie\nModular.com\nTerms\nPrivacy\nGet started\nPlease accept our cookies\nWe use cookies to monitor visitor traffic and gain valuable insights that help us improve the website and documentation. Read more\nAccept\nReject"
  },
  {
    "title": "Modular Docs - mojo demangle",
    "url": "https://docs.modular.com/mojo/cli/demangle.html",
    "html": "MAX Engine\nMAX Serving\nMojoðŸ”¥\nGet Started\nOverview\nWhy Mojo\nMojo Manual\nIntro\nGet started\nLanguage basics\nFunctions\nVariables\nStructs\nTraits\nValue ownership\nValue lifecycle\nMetaprogramming\nPython\nDecorators\nModules and packages\nMojo notebooks\nOverview\nLow-level IR in Mojo\nMandelbrot in Mojo with Python plots\nMatrix multiplication in Mojo\nFast memset in Mojo\nRay tracing in Mojo\nMojo library\nModule index\nalgorithm\nautotune\nbase64\nbenchmark\nbuiltin\ncomplex\nmath\nmemory\nos\npathlib\npython\nrandom\nsys\ntensor\ntesting\ntime\nutils\nMojo CLI\nmojo\nmojo build\nmojo debug\nmojo demangle\nmojo doc\nmojo format\nmojo package\nmojo repl\nmojo run\nRoadmap & sharp edges\nChangelog\nFAQ\nCommunity\nOn this page\nSynopsis\nDescription\nOptions\nmojo demangle\n\nDemangles the given name.\n\nSynopsis\nmojo demangle [options] <name>\nDescription\n\nIf the given name is a mangled Mojo symbol name, prints the demangled name. If no name is provided, one is read from standard input.\n\nOptions\nCommon options\n--help, -h\n\nDisplays help information.\n\nÂ© 2023 Modular Inc\ncookie\nModular.com\nTerms\nPrivacy\nGet started\nPlease accept our cookies\nWe use cookies to monitor visitor traffic and gain valuable insights that help us improve the website and documentation. Read more\nAccept\nReject"
  },
  {
    "title": "Modular Docs - mojo debug",
    "url": "https://docs.modular.com/mojo/cli/debug.html",
    "html": "MAX Engine\nMAX Serving\nMojoðŸ”¥\nGet Started\nOverview\nWhy Mojo\nMojo Manual\nIntro\nGet started\nLanguage basics\nFunctions\nVariables\nStructs\nTraits\nValue ownership\nValue lifecycle\nMetaprogramming\nPython\nDecorators\nModules and packages\nMojo notebooks\nOverview\nLow-level IR in Mojo\nMandelbrot in Mojo with Python plots\nMatrix multiplication in Mojo\nFast memset in Mojo\nRay tracing in Mojo\nMojo library\nModule index\nalgorithm\nautotune\nbase64\nbenchmark\nbuiltin\ncomplex\nmath\nmemory\nos\npathlib\npython\nrandom\nsys\ntensor\ntesting\ntime\nutils\nMojo CLI\nmojo\nmojo build\nmojo debug\nmojo demangle\nmojo doc\nmojo format\nmojo package\nmojo repl\nmojo run\nRoadmap & sharp edges\nChangelog\nFAQ\nCommunity\nOn this page\nSynopsis\nDescription\nOptions\nmojo debug\n\nLaunches the LLDB debugger with support for debugging Mojo programs.\n\nSynopsis\nmojo debug [debug-options]\nDescription\n\nLaunches the LLDB debugger with support for debugging programs written in Mojo, as well as other standard languages like C and C++. This feature is still experimental.\n\nOptions\nCommon options\n--help, -h\n\nDisplays help information.\n\nÂ© 2023 Modular Inc\ncookie\nModular.com\nTerms\nPrivacy\nGet started\nPlease accept our cookies\nWe use cookies to monitor visitor traffic and gain valuable insights that help us improve the website and documentation. Read more\nAccept\nReject"
  },
  {
    "title": "Modular Docs - mojo build",
    "url": "https://docs.modular.com/mojo/cli/build.html",
    "html": "MAX Engine\nMAX Serving\nMojoðŸ”¥\nGet Started\nOverview\nWhy Mojo\nMojo Manual\nIntro\nGet started\nLanguage basics\nFunctions\nVariables\nStructs\nTraits\nValue ownership\nValue lifecycle\nMetaprogramming\nPython\nDecorators\nModules and packages\nMojo notebooks\nOverview\nLow-level IR in Mojo\nMandelbrot in Mojo with Python plots\nMatrix multiplication in Mojo\nFast memset in Mojo\nRay tracing in Mojo\nMojo library\nModule index\nalgorithm\nautotune\nbase64\nbenchmark\nbuiltin\ncomplex\nmath\nmemory\nos\npathlib\npython\nrandom\nsys\ntensor\ntesting\ntime\nutils\nMojo CLI\nmojo\nmojo build\nmojo debug\nmojo demangle\nmojo doc\nmojo format\nmojo package\nmojo repl\nmojo run\nRoadmap & sharp edges\nChangelog\nFAQ\nCommunity\nOn this page\nSynopsis\nDescription\nOptions\nmojo build\n\nBuilds an executable from a Mojo file.\n\nSynopsis\nmojo build [options] <path>\nDescription\n\nCompiles the Mojo file at the given path into an executable.\n\nBy default, the executable is saved to the current directory and named the same as the input file, but without a file extension.\n\nOptions\nOutput options\n-o <PATH>\n\nSets the path and filename for the executable output. By default, it outputs the executable to the same location as the Mojo file, with the same name and no extension.\n\nCompilation options\n--no-optimization, -O0\n\nDisables compiler optimizations. This might reduce the amount of time it takes to compile the Mojo source file. It might also reduce the runtime performance of the compiled executable.\n\n--target-triple <TRIPLE>\n\nSets the compilation target triple. Defaults to the host target.\n\n--target-cpu <CPU>\n\nSets the compilation target CPU. Defaults to the host CPU.\n\n--target-features <FEATURES>\n\nSets the compilation target CPU features. Defaults to the host features.\n\n--march <ARCHITECTURE>\n\nSets the architecture for which to generate code.\n\n--mcpu <CPU>\n\nSets the CPU for which to generate code.\n\n--mtune <TUNE>\n\nSets the CPU for which to tune code.\n\n-I <PATH>\n\nAppends the given path to the list of directories to search for imported Mojo files.\n\n-D <KEY=VALUE>\n\nDefines a named value that can be used from within the Mojo source file being executed. For example, -D foo=42 defines a name foo that, when queried with the sys.param_env module from within the Mojo program, would yield the compile-time value 42.\n\n--parsing-stdlib\n\nParses the input file(s) as the Mojo standard library.\n\nDiagnostic options\n--warn-missing-doc-strings\n\nEmits warnings for missing or partial docstrings.\n\n--max-notes-per-diagnostic <INTEGER>\n\nWhen the Mojo compiler emits diagnostics, it sometimes also prints notes with additional information. This option sets an upper threshold on the number of notes that can be printed with a diagnostic. If not specified, the default maximum is 10.\n\nExperimental compilation options\n--debug-level <LEVEL>\n\nSets the level of debug info to use at compilation. The value must be one of: none (the default value), line-tables, or full. Please note that there are issues when generating debug info for some Mojo programs that have yet to be addressed.\n\n--sanitize <CHECK>\n\nTurns on runtime checks. The following values are supported: address (detects memory issues), and thread (detects multi-threading issues). Please note that these checks are not currently supported when executing Mojo programs.\n\n--debug-info-language <LANGUAGE>\n\nSets the language to emit as part of the debug info. The supported languages are: Mojo, and C. C is the default, and is useful to enable rudimentary debugging and binary introspection in tools that donâ€™t understand Mojo.\n\nCommon options\n--help, -h\n\nDisplays help information.\n\nÂ© 2023 Modular Inc\ncookie\nModular.com\nTerms\nPrivacy\nGet started\nPlease accept our cookies\nWe use cookies to monitor visitor traffic and gain valuable insights that help us improve the website and documentation. Read more\nAccept\nReject"
  },
  {
    "title": "Modular Docs - mojo",
    "url": "https://docs.modular.com/mojo/cli/",
    "html": "MAX Engine\nMAX Serving\nMojoðŸ”¥\nGet Started\nOverview\nWhy Mojo\nMojo Manual\nIntro\nGet started\nLanguage basics\nFunctions\nVariables\nStructs\nTraits\nValue ownership\nValue lifecycle\nMetaprogramming\nPython\nDecorators\nModules and packages\nMojo notebooks\nOverview\nLow-level IR in Mojo\nMandelbrot in Mojo with Python plots\nMatrix multiplication in Mojo\nFast memset in Mojo\nRay tracing in Mojo\nMojo library\nModule index\nalgorithm\nautotune\nbase64\nbenchmark\nbuiltin\ncomplex\nmath\nmemory\nos\npathlib\npython\nrandom\nsys\ntensor\ntesting\ntime\nutils\nMojo CLI\nmojo\nmojo build\nmojo debug\nmojo demangle\nmojo doc\nmojo format\nmojo package\nmojo repl\nmojo run\nRoadmap & sharp edges\nChangelog\nFAQ\nCommunity\nOn this page\nSynopsis\nDescription\nCommands\nOptions\nmojo\n\nThe MojoðŸ”¥ command line interface.\n\nSynopsis\nmojo <command>\nmojo [run-options] <path>\nmojo [options]\nmojo\nDescription\n\nThe mojo CLI provides all the tools you need for Mojo development, such as commands to run, compile, and package Mojo code. A list of all commands are listed below, and you can learn more about each one by adding the --help option to the command (for example, mojo package --help).\n\nHowever, you may omit the run and repl commands. That is, you can run a Mojo file by simply passing the filename to mojo:\n\nmojo hello.mojo\n\nAnd you can start a REPL session by running mojo with no commands.\n\nTo update Mojo to the latest version, use the modular tool:\n\nmodular update mojo\n\nYou can check your current version with mojo --version. For information about Mojo updates, see the Mojo changelog.\n\nCommands\n\nrun â€” Builds and executes a Mojo file.\n\nbuild â€” Builds an executable from a Mojo file.\n\nrepl â€” Launches the Mojo REPL.\n\ndebug â€” Launches the LLDB debugger with support for debugging Mojo programs.\n\npackage â€” Compiles a Mojo package.\n\nformat â€” Formats Mojo source files.\n\ndoc â€” Compiles docstrings from a Mojo file.\n\ndemangle â€” Demangles the given name.\n\nOptions\nDiagnostic options\n--version, -v\n\nPrints the Mojo version and exits.\n\nCommon options\n--help, -h\n\nDisplays help information.\n\nÂ© 2023 Modular Inc\ncookie\nModular.com\nTerms\nPrivacy\nGet started\nPlease accept our cookies\nWe use cookies to monitor visitor traffic and gain valuable insights that help us improve the website and documentation. Read more\nAccept\nReject"
  }
]